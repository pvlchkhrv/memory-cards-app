{"version":3,"sources":["components/forms/register/RegisteredSuccess.module.css","components/forms/restore-password/CheckEmail.module.css","components/Pagination/PaginationBar.module.css","components/forms/add-new-item-form/AddNewItemForm.module.css","store/reducers/app/types.ts","store/reducers/auth/types.ts","components/forms/login/LoginForm.tsx","hooks/useAppSelector.ts","store/reducers/packs/types.ts","api/instance.ts","api/authAPI.ts","utils/handleError.ts","store/reducers/auth/auth-action-creators.ts","store/reducers/app/action-creators.ts","api/packsAPI.ts","store/reducers/cards/types.ts","store/reducers/packs/packs-action-creators.ts","api/cardsAPI.ts","router/index.ts","store/reducers/cards/cards-action-creators.ts","store/reducers/action-creators.ts","hooks/useActions.ts","pages/Login.tsx","components/forms/register/RegisteredSuccess.tsx","components/forms/register/RegisterForm.tsx","pages/Register.tsx","components/forms/restore-password/CheckEmail.tsx","components/forms/restore-password/RestorePasswordForm.tsx","pages/RestorePassword.tsx","pages/Error404.tsx","components/forms/set-password/SetPassword.tsx","pages/SetPassword.tsx","components/Profile/ProfileInfo.tsx","components/Packs/AsideBar/isMineBlock.tsx","components/Packs/AsideBar/UserInfoBlock.tsx","components/Packs/AsideBar/SliderBlock.tsx","components/Packs/AsideBar/AsideBar.tsx","components/common/select/MySelect.tsx","components/Pagination/PaginationBar.tsx","utils/date.ts","components/forms/edit-item-form/EditItemForm.tsx","components/modals/Modal.tsx","components/Packs/PacksList/PacksTable.tsx","components/forms/add-new-item-form/AddNewItemForm.tsx","components/Search/SearchBar.tsx","components/Packs/PacksList/PacksList.tsx","pages/Packs.tsx","components/Cards/CardTable.tsx","components/Cards/Cards.tsx","pages/Learn.tsx","components/AppRouter.tsx","components/common/error-bar/ErrorBar.tsx","components/Navbar/Navbar.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/packs/index.ts","store/reducers/app/index.ts","store/reducers/cards/index.ts","store/reducers/index.ts","store/index.ts","styles/theme.tsx","index.tsx","components/forms/register/RegisterForm.module.css","components/Packs/PacksList/PacksList.module.css","components/forms/login/LoginForm.module.css","components/Packs/AsideBar/AsideBar.module.css","components/forms/restore-password/RestorePassword.module.css","components/forms/set-password/SetPassword.module.css","components/modals/Modal.module.css","components/Navbar/Navbar.module.css","components/Packs/PacksList/PacksTable.module.css","components/forms/edit-item-form/EditItemForm.module.css"],"names":["module","exports","AppActionEnum","AuthActionEnum","LoginForm","onSubmitHandler","status","formik","useFormik","initialValues","email","password","rememberMe","validate","values","errors","test","length","onSubmit","useState","visible","setVisible","Paper","elevation","className","s","paper","form","handleSubmit","FormLabel","formLabel","FormGroup","formGroup","TextField","variant","label","margin","getFieldProps","touched","style","color","type","passwordInput","icon","onClick","top","left","FormControlLabel","control","Checkbox","Button","button","disabled","signUpBlock","to","useAppSelector","useSelector","PacksActions","instance","axios","create","baseURL","withCredentials","authAPI","post","response","data","payload","delete","from","message","handleError","e","dispatch","error","AppActionCreators","setAppError","setAppStatus","AuthActionCreators","setUser","user","SET_USER_DATA","setIsAuth","isAuth","SET_IS_AUTH","setAuthInfo","info","SET_INFO","login","a","logout","authMe","register","restorePassword","setAppIsInitialized","isInitialized","SET_APP_IS_INITIALIZED","SET_APP_STATUS","SET_APP_ERROR","initializeApp","CardsActions","PACKS_URL","packsAPI","queryParams","get","params","cardsPack","id","put","PacksActionCreators","setPacks","SET_PACKS","setPageCount","SET_PAGE_COUNT","setPage","SET_PAGE","setCardPacksTotalCount","SET_PACKS_TOTAL_COUNT","setIsMine","SET_IS_MINE","setCardsQuantity","SET_CARDS_QUANTITY","fetchPacks","cardPacks","pageCount","cardPacksTotalCount","addPack","updatePack","removePack","RouteNames","CARDS_URL","cardsAPI","card","CardsActionCreators","setCards","SET_CARDS","setCardsPageCount","SET_CARDS_PAGE_COUNT","SET_CARDS_PAGE","setCardsTotalCount","SET_CARDS_TOTAL_COUNT","fetchCards","cards","cardsTotalCount","addCard","updateCard","removeCard","allActionCreators","useActions","useDispatch","bindActionCreators","Login","state","auth","app","RegisteredSuccess","history","useHistory","useEffect","setTimeout","push","fontSize","RegisterForm","isRegistered","setIsRegistered","confirmPassword","icon1","icon2","buttonBlock","Register","CheckEmail","RestorePasswordForm","isSent","setIsSent","text","RestorePassword","Error404","SetPasswordForm","SetPassword","ProfileInfo","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","Avatar","alt","src","IsMineBlock","console","log","isMine","packs","isMineBlock","UserInfoBlock","SmallAvatar","styled","theme","width","height","border","palette","background","BigAvatar","userInfoBlock","avatar","PROFILE","name","SliderBlock","React","value","setValue","maxCardsCount","minCardsCount","sliderBlock","Box","sx","Slider","getAriaLabel","onChange","event","newValue","min","max","valueLabelDisplay","user_id","_id","AsideBar","Grid","item","xs","backgroundColor","settings","MySelect","options","defaultValue","map","o","PaginationBar","page","packsTotal","handlePageChange","handlePageCountChange","totalPages","Math","ceil","paginationBar","Pagination","count","formatDate","date","year","getFullYear","month","getMonth","day","getDate","EditItemForm","onEditClick","buttonTitle","pack_id","title","setTitle","currentTarget","size","Modal","children","rootClasses","myModal","active","join","myModalContent","stopPropagation","PacksTable","userId","onDeleteClick","modal","setModal","Table","TableHead","tableHead","TableRow","t","TableCell","align","noPacksMessage","TableBody","pack","component","scope","PACKS","cardsCount","Date","updated","created","AddNewItemForm","placeholder","SearchBar","filter","onSearchClick","handleSearch","handleCreatePack","searchBar","Search","PacksList","setFilter","getPacks","packName","handleDeletePack","handleEditPack","packList","Packs","container","CardTable","aria-label","question","answer","Cards","useParams","forEach","p","handleCreateCard","cardsPack_id","Container","searchButton","grades","getCard","sum","reduce","acc","grade","rand","random","res","i","newSum","Learn","shots","answerImg","questionImg","questionVideo","answerVideo","rating","more_id","setCard","first","setFirst","isChecked","setIsChecked","find","Card","position","transform","display","flexDirection","alignItems","CardContent","CardMedia","image","Typography","CardActions","padding","marginTop","flexWrap","justifyContent","g","privateRoutes","path","exact","Profile","CARDS","LEARN","publicRoutes","LOGIN","REGISTER","RESTORE","SET_PASSWORD","ERROR","AppRouter","r","ErrorBar","isOpen","Snackbar","open","autoHideDuration","onClose","reason","Alert","severity","Navbar","AppBar","appbar","Toolbar","toolbar","LinearProgress","App","textAlign","CircularProgress","initialState","authReducer","action","initState","packsReducer","appReducer","maxGrade","minGrade","packUserId","cardsReducer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","createTheme","primary","main","typography","fontFamily","shape","borderRadius","overrides","MuiContainer","root","overflowY","MuiButton","textTransform","props","MuiTextField","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5fc2ae2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"RegisteredSuccess_paper__2UFwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"CheckEmail_paper__31ZgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBar\":\"PaginationBar_paginationBar__2ezqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddNewItemForm_form__31JIw\"};","type RequestStatusType = 'idle' | 'loading' | 'succeed' | 'failed';\r\n\r\ninterface AppState {\r\n    isInitialized: boolean;\r\n    status: RequestStatusType;\r\n    error: string;\r\n}\r\n\r\nexport enum AppActionEnum {\r\n    SET_APP_IS_INITIALIZED = 'SET_APP_IS_INITIALIZED',\r\n    SET_APP_STATUS = 'SET_APP_STATUS',\r\n    SET_APP_ERROR = 'SET_APP_ERROR',\r\n}\r\n\r\ninterface SetAppIsInitialized {\r\n    type: AppActionEnum.SET_APP_IS_INITIALIZED;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetAppStatus {\r\n    type: AppActionEnum.SET_APP_STATUS;\r\n    payload: RequestStatusType;\r\n}\r\n\r\ninterface SetAppError {\r\n    type: AppActionEnum.SET_APP_ERROR;\r\n    payload: string;\r\n}\r\n\r\ntype AppAction =\r\n    | SetAppIsInitialized\r\n    | SetAppStatus\r\n    | SetAppError\r\n\r\nexport type {\r\n    AppAction,\r\n    AppState,\r\n    SetAppError,\r\n    SetAppStatus,\r\n    SetAppIsInitialized,\r\n    RequestStatusType\r\n}\r\n","import {IUser} from '../../../models/IUser';\r\n\r\ninterface PingResponse {\r\n    ping: number;\r\n    backTime: number;\r\n    frontTime: string;\r\n    info: string;\r\n}\r\n\r\ntype AuthMeResponse = IUser\r\ntype LoginResponse = IUser\r\n\r\ninterface RegisterResponse {\r\n    addedUser: {\r\n        _id: string;\r\n        email: string;\r\n        rememberMe: boolean;\r\n        isAdmin: boolean;\r\n        name: string;\r\n        verified: boolean;\r\n        publicCardPacksCount: number;\r\n        created: Date;\r\n        updated: Date;\r\n        __v: number;\r\n    }\r\n}\r\n\r\ninterface RestoreResponse {\r\n    info: string;\r\n    success: boolean;\r\n    answer: boolean;\r\n    html: boolean;\r\n}\r\n\r\ninterface UpdateProfileResponse {\r\n    updatedUser: IUser;\r\n    token: string;\r\n    tokenDeathTime: number;\r\n}\r\n\r\ninterface AuthState {\r\n    user: IUser,\r\n    isAuth: boolean,\r\n    info: string,\r\n}\r\n\r\nexport enum AuthActionEnum {\r\n    SET_USER_DATA = 'SET_USER_DATA',\r\n    SET_IS_AUTH = 'SET_IS_AUTH',\r\n    SET_INFO = 'SET_INFO',\r\n}\r\n\r\ninterface SetUserData {\r\n    type: AuthActionEnum.SET_USER_DATA;\r\n    payload: IUser\r\n}\r\n\r\ninterface SetIsAuth {\r\n    type: AuthActionEnum.SET_IS_AUTH;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetAuthInfo {\r\n    type: AuthActionEnum.SET_INFO;\r\n    payload: string\r\n}\r\n\r\ninterface LoginPayload {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\n\r\ninterface RegisterPayload {\r\n    email: string,\r\n    password: string,\r\n}\r\n\r\ntype AuthAction =\r\n    | SetUserData\r\n    | SetIsAuth\r\n    | SetAuthInfo\r\n\r\nexport type {\r\n    AuthState,\r\n    AuthAction,\r\n    SetUserData,\r\n    SetIsAuth,\r\n    SetAuthInfo,\r\n    LoginPayload,\r\n    RegisterPayload,\r\n    PingResponse,\r\n    AuthMeResponse,\r\n    LoginResponse,\r\n    RegisterResponse,\r\n    RestoreResponse,\r\n    UpdateProfileResponse,\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useFormik} from 'formik';\r\nimport {Button, Checkbox, FormControlLabel, FormGroup, FormLabel, Paper, TextField} from '@material-ui/core';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport s from './LoginForm.module.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {LoginPayload} from '../../../store/reducers/auth/types';\r\nimport {RequestStatusType} from '../../../store/reducers/app/types';\r\n\r\ntype LoginPropsType = {\r\n    onSubmitHandler: (values: LoginPayload) => void\r\n    status: RequestStatusType\r\n}\r\n\r\ntype FormikErrorType = {\r\n    email?: string;\r\n    password?: string;\r\n}\r\n\r\nconst LoginForm: React.FC<LoginPropsType> = ({onSubmitHandler, status}) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: 'panich2303@gmail.com',\r\n            password: '12345678',\r\n            rememberMe: false,\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Should be more than 7 characters'\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            onSubmitHandler(values);\r\n        },\r\n    });\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n\r\n    return (\r\n        <Paper elevation={3} className={s.paper}>\r\n            <form className={s.form} onSubmit={formik.handleSubmit}>\r\n                <FormLabel>\r\n                    <h1 className={s.formLabel}>Log In</h1>\r\n                </FormLabel>\r\n                <FormGroup className={s.formGroup}>\r\n                    <TextField\r\n                        variant={'standard'}\r\n                        label='Email'\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.touched.email &&\r\n                    formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n                    <TextField\r\n                        variant={'standard'}\r\n                        type={visible ? 'text' : 'password'}\r\n                        label='Password'\r\n                        margin='normal'\r\n                        className={s.passwordInput}\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {\r\n                        formik.values.password.length > 0\r\n                        && <VisibilityIcon className={s.icon}\r\n                                           onClick={() => setVisible(!visible)}\r\n                                           color={visible ? 'primary' : 'inherit'}\r\n                                           style={formik.errors.password\r\n                                               ? ({top: '29%', left: '58%'})\r\n                                               : ({top: '30.5%', left: '58%'})\r\n                                           }\r\n                        />\r\n                    }\r\n                    {formik.touched.password &&\r\n                    formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                    <FormControlLabel\r\n                        label={'Remember me'}\r\n                        control={\r\n                            <Checkbox\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                                color='primary'\r\n                            />\r\n                        }\r\n                    />\r\n                </FormGroup>\r\n                <Button\r\n                    type={'submit'}\r\n                    variant={'contained'}\r\n                    color={'primary'}\r\n                    className={s.button}\r\n                    disabled={status === 'loading'}\r\n                >\r\n                    Sign In</Button>\r\n                <div className={s.signUpBlock}>\r\n                    <span>Don't have an account? <Link to='/register'>Sign Up!</Link></span>\r\n                    <Link to='/restore'>Forgot Password?</Link>\r\n                </div>\r\n            </form>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport {\r\n    LoginForm\r\n}\r\n","import {TypedUseSelectorHook, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../store/reducers';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootStateType> = useSelector;\r\n","import {IPack} from '../../../models/IPack';\r\n\r\ninterface PacksState {\r\n    packs: IPack[];\r\n    cardPacksTotalCount: number;\r\n    maxCardsCount: number;\r\n    minCardsCount: number;\r\n    page: number;\r\n    pageCount: number;\r\n    filter: string;\r\n    isMine: boolean;\r\n}\r\n\r\ninterface GetPacksResponse {\r\n    cardPacks: IPack[];\r\n    page: number;\r\n    pageCount: number;\r\n    minCardsCount: number;\r\n    maxCardsCount: number;\r\n    cardPacksTotalCount: number;\r\n}\r\n\r\ninterface GetPacksQueryParams {\r\n    packName?: string;\r\n    min?: number;\r\n    max?: number;\r\n    page?: number;\r\n    pageCount?: number;\r\n    user_id?: string;\r\n    sortPacks?: string;\r\n}\r\n\r\ninterface PackPayload {\r\n    _id?: string;\r\n    name?: string;\r\n    path?: string;\r\n    private?: boolean;\r\n    type?: string;\r\n    grade?: number;\r\n    shots?: number;\r\n    rating?: number;\r\n    deckCover?: string;\r\n}\r\n\r\nexport enum PacksActions {\r\n    SET_PACKS = 'SET_PACKS',\r\n    SET_PAGE_COUNT = 'SET_PAGE_COUNT',\r\n    SET_PAGE = 'SET_PAGE',\r\n    SET_PACKS_TOTAL_COUNT = 'SET_PACKS_TOTAL_COUNT',\r\n    FILTER_PACKS = 'FILTER_PACKS',\r\n    SET_IS_MINE = 'SET_IS_MINE',\r\n    SET_CARDS_QUANTITY = 'SET_CARDS_QUANTITY'\r\n\r\n}\r\n\r\ninterface SetPacks {\r\n    type: PacksActions.SET_PACKS;\r\n    payload: IPack[];\r\n}\r\n\r\ninterface SetPageCount {\r\n    type: PacksActions.SET_PAGE_COUNT;\r\n    payload: number;\r\n}\r\n\r\ninterface SetPage {\r\n    type: PacksActions.SET_PAGE;\r\n    payload: number;\r\n}\r\n\r\ninterface SetPacksTotalCount {\r\n    type: PacksActions.SET_PACKS_TOTAL_COUNT;\r\n    payload: number;\r\n}\r\n\r\ninterface SetIsMine {\r\n    type: PacksActions.SET_IS_MINE;\r\n    payload: boolean;\r\n}\r\n\r\ninterface SetCardsQuantity {\r\n    type: PacksActions.SET_CARDS_QUANTITY;\r\n    payload: {\r\n        min: number;\r\n        max: number;\r\n    };\r\n}\r\n\r\n\r\ntype PacksAction =\r\n    | SetPacks\r\n    | SetPageCount\r\n    | SetPage\r\n    | SetPacksTotalCount\r\n    | SetIsMine\r\n    | SetCardsQuantity\r\n\r\nexport type {\r\n    PacksState,\r\n    GetPacksResponse,\r\n    GetPacksQueryParams,\r\n    PackPayload,\r\n    SetPacks,\r\n    SetPageCount,\r\n    SetPage,\r\n    SetPacksTotalCount,\r\n    PacksAction,\r\n    SetIsMine,\r\n    SetCardsQuantity\r\n}\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n});\r\n\r\nexport {\r\n    instance\r\n};\r\n","import {instance} from './instance';\r\nimport {\r\n    AuthMeResponse,\r\n    LoginPayload,\r\n    LoginResponse,\r\n    PingResponse,\r\n    RegisterPayload,\r\n    RegisterResponse, RestoreResponse, UpdateProfileResponse\r\n} from '../store/reducers/auth/types';\r\nconst from = 'pvlchkhrv@gmail.com';\r\nconst message = `<div>password recover link: <a href='https://neko-back.herokuapp.com/2.0/set-new-password/$token$'>Link</a></div>`;\r\n\r\nexport const authAPI = {\r\n    async ping() {\r\n        const response = await instance.get<PingResponse>(`/ping/?frontTime=${Date.now()}`);\r\n        return response.data;\r\n    },\r\n    async authMe() {\r\n        const response = await instance.post<AuthMeResponse>('auth/me', {});\r\n        return response.data;\r\n    },\r\n    async login(payload: LoginPayload) {\r\n        const response = await instance.post<LoginResponse>('auth/login', payload);\r\n        return response.data\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me', {});\r\n    },\r\n    async register(payload: RegisterPayload) {\r\n        const response = await instance.post<RegisterResponse>(`auth/register`, payload);\r\n        return response.data;\r\n    },\r\n    async restorePassword(payload: { email: string }) {\r\n        const response = await instance.post<RestoreResponse>('/auth/forgot', {...payload, from, message});\r\n        return response.data;\r\n    },\r\n    setNewPassword(payload: { password: string, resetPasswordToken: string }) {\r\n        return instance.post<ResponseType>('auth/new-password', payload);\r\n    },\r\n    updateProfile(payload: { name?: string, avatar?: string }) {\r\n        return instance.put<UpdateProfileResponse>('auth/me', payload);\r\n    }\r\n};\r\n","import {AppActionCreators} from '../store/reducers/app/action-creators';\r\nimport {AppDispatch} from '../store';\r\n\r\nexport const handleError = (e: any) => (dispatch: AppDispatch)=> {\r\n    const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n    dispatch(AppActionCreators.setAppError(error));\r\n    dispatch(AppActionCreators.setAppStatus('failed'))\r\n}\r\n","import {IUser} from '../../../models/IUser';\r\nimport {AuthActionEnum, LoginPayload, SetAuthInfo, SetIsAuth, SetUserData} from './types';\r\nimport {AppDispatch} from '../../index';\r\nimport {authAPI} from '../../../api/authAPI';\r\nimport {AppActionCreators} from '../app/action-creators';\r\nimport {handleError} from '../../../utils/handleError';\r\n\r\nexport const AuthActionCreators = {\r\n    setUser: (user: IUser): SetUserData => ({type: AuthActionEnum.SET_USER_DATA, payload: user}),\r\n    setIsAuth: (isAuth: boolean): SetIsAuth => ({type: AuthActionEnum.SET_IS_AUTH, payload: isAuth}),\r\n    setAuthInfo: (info: string): SetAuthInfo => ({type: AuthActionEnum.SET_INFO, payload: info}),\r\n    login: (payload: LoginPayload) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            const user = await authAPI.login(payload);\r\n            // localStorage.setItem('user', JSON.stringify(user));\r\n            dispatch(AuthActionCreators.setUser(user));\r\n            dispatch(AuthActionCreators.setIsAuth(true));\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n    logout: () => async (dispatch: AppDispatch) => {\r\n        try {\r\n            dispatch(AppActionCreators.setAppStatus('loading'));\r\n            await authAPI.logout();\r\n            // localStorage.removeItem('auth');\r\n            // localStorage.removeItem('user');\r\n            dispatch(AuthActionCreators.setUser({} as IUser));\r\n            dispatch(AuthActionCreators.setIsAuth(false));\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            return handleError(e);\r\n        }\r\n    },\r\n    authMe: () => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            const user = await authAPI.authMe();\r\n            dispatch(AuthActionCreators.setUser(user));\r\n            dispatch(AuthActionCreators.setIsAuth(true));\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n    register: (email: string, password: string) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            await authAPI.register({email, password});\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n    restorePassword: (email: string) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            const data = await authAPI.restorePassword({email});\r\n            dispatch(AuthActionCreators.setAuthInfo(data.info));\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n};\r\n","import {AppActionEnum, RequestStatusType, SetAppError, SetAppIsInitialized, SetAppStatus} from './types';\r\nimport {AppDispatch} from '../../index';\r\nimport {AuthActionCreators} from '../auth/auth-action-creators';\r\nimport {authAPI} from '../../../api/authAPI';\r\n\r\nexport const AppActionCreators = {\r\n    setAppIsInitialized: (isInitialized: boolean): SetAppIsInitialized => ({\r\n        type: AppActionEnum.SET_APP_IS_INITIALIZED,\r\n        payload: isInitialized\r\n    }),\r\n    setAppStatus: (status: RequestStatusType): SetAppStatus => ({type: AppActionEnum.SET_APP_STATUS, payload: status}),\r\n    setAppError: (error: string): SetAppError => ({type: AppActionEnum.SET_APP_ERROR, payload: error}),\r\n    initializeApp: () => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            const user = await authAPI.authMe();\r\n            if (user) {\r\n                dispatch(AuthActionCreators.setUser(user));\r\n                dispatch(AppActionCreators.setAppIsInitialized(true));\r\n                dispatch(AuthActionCreators.setIsAuth(true));\r\n                dispatch(AppActionCreators.setAppStatus('succeed'));\r\n            } else {\r\n                dispatch(AppActionCreators.setAppIsInitialized(true));\r\n                dispatch(AppActionCreators.setAppStatus('succeed'));\r\n            }\r\n         } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppIsInitialized(true));\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    }\r\n}\r\n","import {instance} from './instance'\r\nimport {GetPacksQueryParams, GetPacksResponse, PackPayload} from '../store/reducers/packs/types';\r\n\r\nconst PACKS_URL = 'cards/pack/';\r\n\r\nconst packsAPI = {\r\n    async getPacks(queryParams: GetPacksQueryParams) {\r\n        const response = await instance.get<GetPacksResponse>(PACKS_URL, {params: queryParams});\r\n        return response.data;\r\n    },\r\n    addPack(payload: PackPayload) {\r\n        return instance.post(PACKS_URL, {cardsPack: payload});\r\n    },\r\n    removePack(id: string) {\r\n        return instance.delete(PACKS_URL, {params: {id}});\r\n    },\r\n    updatePack(payload: PackPayload) {\r\n        return instance.put(PACKS_URL, {cardsPack: payload});\r\n    },\r\n};\r\n\r\nexport {\r\n    packsAPI,\r\n    PACKS_URL\r\n};\r\n","import {ICard} from '../../../models/ICard';\r\n\r\n\r\ninterface CardsState {\r\n    cards: ICard[];\r\n    cardsTotalCount: number;\r\n    maxGrade: number;\r\n    minGrade: number;\r\n    page: number;\r\n    pageCount: number;\r\n    packUserId: string; // id юзера, создавшего колоду\r\n}\r\n\r\ninterface GetCardsQueryParams {\r\n    cardAnswer?: string;\r\n    cardQuestion?: string;\r\n    min?: number;\r\n    max?: number;\r\n    cardsPack_id: string;\r\n    pageCount?: number;\r\n    page?: number;\r\n    sortCards?: string;\r\n}\r\n\r\ninterface CardPayload {\r\n    cardsPack_id: string;\r\n    question?: string;\r\n    answer?: string;\r\n    grade?: number;\r\n    shots?: number;\r\n    rating?: number;\r\n    answerImg?: string;\r\n    questionImg?: string;\r\n    questionVideo?: string;\r\n    answerVideo?: string;\r\n    type?: string;\r\n}\r\n\r\nexport enum CardsActions {\r\n    SET_CARDS = 'SET_CARDS',\r\n    SET_CARDS_PAGE_COUNT = 'SET_PAGE_COUNT',\r\n    SET_CARDS_PAGE = 'SET_PAGE',\r\n    SET_CARDS_TOTAL_COUNT = 'SET_CARDS_TOTAL_COUNT',\r\n}\r\n\r\ninterface SetCards {\r\n    type: CardsActions.SET_CARDS;\r\n    payload: ICard[];\r\n}\r\n\r\ninterface SetCardsPageCount {\r\n    type: CardsActions.SET_CARDS_PAGE_COUNT;\r\n    payload: number;\r\n}\r\n\r\ninterface SetCardsPage {\r\n    type: CardsActions.SET_CARDS_PAGE;\r\n    payload: number;\r\n}\r\n\r\ninterface SetCardsTotalCount {\r\n    type: CardsActions.SET_CARDS_TOTAL_COUNT;\r\n    payload: number;\r\n}\r\n\r\ntype CardsAction =\r\n    | SetCards\r\n    | SetCardsPage\r\n    | SetCardsPageCount\r\n    | SetCardsTotalCount\r\n\r\nexport type {\r\n    CardsState,\r\n    GetCardsQueryParams,\r\n    CardPayload,\r\n    CardsAction,\r\n    SetCards,\r\n    SetCardsPage,\r\n    SetCardsPageCount,\r\n    SetCardsTotalCount\r\n};\r\n","import {IPack} from '../../../models/IPack';\r\nimport {\r\n    GetPacksQueryParams,\r\n    PackPayload,\r\n    PacksActions, SetCardsQuantity,\r\n    SetIsMine,\r\n    SetPacks,\r\n    SetPacksTotalCount,\r\n    SetPage,\r\n    SetPageCount\r\n} from './types';\r\nimport {AppDispatch} from '../../index';\r\nimport {AppActionCreators} from '../app/action-creators';\r\nimport {packsAPI} from '../../../api/packsAPI';\r\n\r\nexport const PacksActionCreators = {\r\n    setPacks: (payload: IPack[]): SetPacks => ({type: PacksActions.SET_PACKS, payload}),\r\n    setPageCount: (payload: number): SetPageCount => ({type: PacksActions.SET_PAGE_COUNT, payload}),\r\n    setPage: (payload: number): SetPage => ({type: PacksActions.SET_PAGE, payload}),\r\n    setCardPacksTotalCount: (payload: number): SetPacksTotalCount => ({\r\n        type: PacksActions.SET_PACKS_TOTAL_COUNT,\r\n        payload\r\n    }),\r\n    setIsMine: (payload: boolean): SetIsMine => ({type: PacksActions.SET_IS_MINE, payload}),\r\n    setCardsQuantity: (payload: { max: number, min: number }): SetCardsQuantity => ({\r\n        type: PacksActions.SET_CARDS_QUANTITY,\r\n        payload\r\n    }),\r\n    fetchPacks: (payload: GetPacksQueryParams) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            const data = await packsAPI.getPacks(payload);\r\n            dispatch(PacksActionCreators.setPacks(data.cardPacks));\r\n            dispatch(PacksActionCreators.setPageCount(data.pageCount));\r\n            dispatch(PacksActionCreators.setCardPacksTotalCount(data.cardPacksTotalCount));\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n    addPack: (payload: PackPayload) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            await packsAPI.addPack(payload);\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n    updatePack: (payload: PackPayload) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            await packsAPI.updatePack(payload);\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n    removePack: (id: string) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            await packsAPI.removePack(id);\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n}\r\n","import {instance} from './instance'\r\nimport {CardPayload, CardsState, GetCardsQueryParams} from '../store/reducers/cards/types';\r\n\r\nconst CARDS_URL = 'cards/card';\r\n\r\nconst cardsAPI = {\r\n    async getCards(queryParams: GetCardsQueryParams) {\r\n        const response = await instance.get<CardsState>(CARDS_URL, {params: queryParams});\r\n        return response.data;\r\n    },\r\n    addCard(payload: CardPayload) {\r\n        return instance.post(CARDS_URL, {card: payload});\r\n    },\r\n    removeCard(id: string) {\r\n        return instance.delete(CARDS_URL, {params: {id}});\r\n    },\r\n    updateCard(payload: CardPayload) {\r\n        return instance.put(CARDS_URL, {card: payload});\r\n    },\r\n    estimateCard(payload: {card_id: string, grade: number}) {\r\n        return instance.put('cards/grade/', payload)\r\n    }\r\n};\r\n\r\nexport {\r\n    cardsAPI,\r\n    CARDS_URL\r\n};\r\n","import Login from '../pages/Login'\r\nimport Register from '../pages/Register';\r\nimport RestorePassword from '../pages/RestorePassword';\r\nimport Error404 from '../pages/Error404';\r\nimport SetPassword from '../pages/SetPassword';\r\nimport Profile from '../components/Profile/ProfileInfo';\r\nimport Packs from '../pages/Packs';\r\nimport Cards from '../components/Cards/Cards';\r\nimport {ComponentType} from 'react';\r\nimport Learn from '../pages/Learn';\r\n\r\ninterface IRoute {\r\n    path: string;\r\n    component: ComponentType;\r\n    exact: boolean;\r\n}\r\n\r\nexport enum RouteNames {\r\n    PACKS = '/packs',\r\n    CARDS = '/packs/:id',\r\n    PROFILE = '/profile',\r\n    LOGIN = '/login',\r\n    REGISTER = '/register',\r\n    RESTORE = '/restore',\r\n    SET_PASSWORD = '/set-password',\r\n    ERROR = '/error',\r\n    LEARN = '/learn/:id'\r\n}\r\n\r\nconst privateRoutes: IRoute[] = [\r\n    {path: RouteNames.PACKS, exact: true, component: Packs},\r\n    {path: RouteNames.PROFILE, component: Profile, exact: true},\r\n    {path: RouteNames.CARDS, component: Cards, exact: true},\r\n    {path: RouteNames.LEARN, component: Learn, exact: true},\r\n];\r\n\r\nconst publicRoutes: IRoute[] = [\r\n    {path: RouteNames.LOGIN, component: Login, exact: true},\r\n    {path: RouteNames.REGISTER, component: Register, exact: true},\r\n    {path: RouteNames.RESTORE, component: RestorePassword, exact: true},\r\n    {path: RouteNames.SET_PASSWORD, component: SetPassword, exact: true},\r\n    {path: RouteNames.ERROR, component: Error404, exact: false},\r\n];\r\n\r\nexport {\r\n    publicRoutes,\r\n    privateRoutes\r\n}\r\n","\r\nimport {AppActionCreators} from '../app/action-creators';\r\nimport {AppDispatch} from '../../index';\r\nimport {\r\n    CardPayload,\r\n    CardsActions,\r\n    GetCardsQueryParams,\r\n    SetCards,\r\n    SetCardsPage,\r\n    SetCardsPageCount,\r\n    SetCardsTotalCount\r\n} from './types';\r\nimport {cardsAPI} from '../../../api/cardsAPI';\r\nimport {ICard} from '../../../models/ICard';\r\n\r\nexport const CardsActionCreators = {\r\n    setCards: (payload: ICard[]): SetCards => ({type: CardsActions.SET_CARDS, payload}),\r\n    setCardsPageCount: (payload: number): SetCardsPageCount => ({type: CardsActions.SET_CARDS_PAGE_COUNT, payload}),\r\n    setPage: (payload: number): SetCardsPage => ({type: CardsActions.SET_CARDS_PAGE, payload}),\r\n    setCardsTotalCount: (payload: number): SetCardsTotalCount => ({type: CardsActions.SET_CARDS_TOTAL_COUNT, payload}),\r\n    fetchCards: (payload: GetCardsQueryParams) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            const data = await cardsAPI.getCards(payload);\r\n            dispatch(CardsActionCreators.setCards(data.cards));\r\n            dispatch(CardsActionCreators.setCardsPageCount(data.pageCount));\r\n            dispatch(CardsActionCreators.setCardsTotalCount(data.cardsTotalCount));\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n    addCard: (payload: CardPayload) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            await cardsAPI.addCard(payload);\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n    updateCard: (payload: CardPayload) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            await cardsAPI.updateCard(payload);\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n    removeCard: (id: string) => async (dispatch: AppDispatch) => {\r\n        dispatch(AppActionCreators.setAppStatus('loading'));\r\n        try {\r\n            await cardsAPI.removeCard(id);\r\n            dispatch(AppActionCreators.setAppStatus('succeed'));\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in console');\r\n            dispatch(AppActionCreators.setAppError(error));\r\n            dispatch(AppActionCreators.setAppStatus('failed'));\r\n        }\r\n    },\r\n}\r\n","import {AppActionCreators} from './app/action-creators';\r\nimport {AuthActionCreators} from './auth/auth-action-creators';\r\nimport {PacksActionCreators} from './packs/packs-action-creators';\r\nimport {CardsActionCreators} from './cards/cards-action-creators';\r\n\r\nexport const allActionCreators = {\r\n    ...AppActionCreators,\r\n    ...AuthActionCreators,\r\n    ...PacksActionCreators,\r\n    ...CardsActionCreators\r\n};\r\n","import {AppDispatch} from '../store';\r\nimport {useDispatch} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {allActionCreators} from '../store/reducers/action-creators';\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch();\r\n    return bindActionCreators(allActionCreators, dispatch);\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {LoginForm} from '../components/forms/login/LoginForm';\r\nimport {LoginPayload} from '../store/reducers/auth/types';\r\nimport {useAppSelector} from '../hooks/useAppSelector';\r\nimport {useActions} from '../hooks/useActions';\r\n\r\n\r\nconst Login = () => {\r\n    const {user} = useAppSelector(state => state.auth);\r\n    const {status} = useAppSelector(state => state.app);\r\n    const {login, authMe} = useActions()\r\n    const onSubmitHandler = (payload: LoginPayload) => {\r\n        login(payload);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     authMe();\r\n    // }, []);\r\n\r\n    // if (Object.keys(user).length !== 0) {\r\n    //     return <Redirect to={RouteNames.PACKS}/>\r\n    // }\r\n\r\n    return (\r\n        <LoginForm onSubmitHandler={onSubmitHandler}\r\n                   status={status}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, {useEffect} from 'react';\r\nimport {Paper} from '@material-ui/core';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport s from './RegisteredSuccess.module.css';\r\nimport {useHistory} from 'react-router';\r\n\r\nconst RegisteredSuccess: React.FC<{}> = () => {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        setTimeout(() => history.push('/login'), 2000)\r\n    }, [])\r\n\r\n    return (\r\n            <Paper elevation={3} className={s.paper}>\r\n                <LockOpenIcon fontSize='large'/>\r\n                <h3>You've been successfully registered</h3>\r\n                <p>Please Sign In on the Login Page</p>\r\n            </Paper>\r\n    );\r\n};\r\n\r\nexport default RegisteredSuccess;\r\n","import React, {useState} from 'react';\r\nimport {useFormik} from 'formik';\r\nimport {Button, FormGroup, FormLabel, Paper, TextField} from '@material-ui/core';\r\nimport s from './RegisterForm.module.css'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {useHistory} from 'react-router';\r\nimport {useActions} from '../../../hooks/useActions';\r\nimport {useAppSelector} from '../../../hooks/useAppSelector';\r\nimport RegisteredSuccess from './RegisteredSuccess';\r\n\r\ntype FormikErrorType = {\r\n    email?: string;\r\n    password?: string;\r\n    confirmPassword?: string;\r\n}\r\n\r\nconst RegisterForm: React.FC = () => {\r\n    const [isRegistered, setIsRegistered] = useState<boolean>(false)\r\n    const history = useHistory();\r\n    const {register} = useActions();\r\n    const {status} = useAppSelector(state => state.app);\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: 'panich2303@gmail.com',\r\n            password: '',\r\n            confirmPassword: ''\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required!';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be more than 7 characters'\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required!';\r\n            } else if (values.confirmPassword.length < 8) {\r\n                errors.confirmPassword = 'Must be more than 7 characters'\r\n            } else if (values.confirmPassword !== values.password) {\r\n                errors.confirmPassword = 'Does not match the above'\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            setIsRegistered(true);\r\n            register(values.email, values.password);\r\n        },\r\n    });\r\n\r\n    if (isRegistered) {\r\n        return <RegisteredSuccess/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={s.paper} elevation={3}>\r\n                <form className={s.form} onSubmit={formik.handleSubmit}>\r\n                    <FormLabel>\r\n                        <h1 className={s.formLabel}>Sign Up</h1>\r\n                    </FormLabel>\r\n                    <FormGroup className={s.formGroup}>\r\n                        <TextField\r\n                            variant={'standard'}\r\n                            label='Email'\r\n                            margin='normal'\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.touched.email &&\r\n                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            variant={'standard'}\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.touched.password &&\r\n                        formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                        <TextField\r\n                            variant={'standard'}\r\n                            type='password'\r\n                            label='Confirm password'\r\n                            margin='normal'\r\n                            {...formik.getFieldProps('confirmPassword')}\r\n                        />\r\n                        {formik.touched.confirmPassword &&\r\n                        formik.errors.confirmPassword ?\r\n                            <div style={{color: 'red'}}>{formik.errors.confirmPassword}</div> : null}\r\n                        <VisibilityIcon className={s.icon1}/>\r\n                        <VisibilityIcon className={s.icon2}/>\r\n                        <div className={s.buttonBlock}>\r\n                            <Button\r\n                                onClick={() => history.push('/login')}\r\n                                color={'secondary'}\r\n                                className={s.button}\r\n                                variant={'contained'}\r\n                            >\r\n                                Cancel</Button>\r\n                            <Button\r\n                                type={'submit'}\r\n                                color={'primary'}\r\n                                variant={'contained'}\r\n                                className={s.button}\r\n                                disabled={status === 'loading'}\r\n                            >\r\n                                Sign Up</Button>\r\n                        </div>\r\n                    </FormGroup>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    RegisterForm\r\n}\r\n","import React from 'react';\r\nimport {RegisterForm} from '../components/forms/register/RegisterForm';\r\n\r\n\r\nconst Register = () => {\r\n    return (\r\n        <div>\r\n            <RegisterForm/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React, {useEffect} from 'react';\r\nimport {Paper} from '@material-ui/core';\r\nimport DraftsTwoToneIcon from '@material-ui/icons/DraftsTwoTone';\r\nimport s from './CheckEmail.module.css';\r\nimport {useHistory} from 'react-router';\r\n\r\ntype CheckEmailPropsType = {\r\n    info: string | null\r\n}\r\n\r\nconst CheckEmail: React.FC<CheckEmailPropsType> = ({info}) => {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        setTimeout(() => history.push('/login'), 3000)\r\n    }, [])\r\n\r\n    return (\r\n            <Paper elevation={3} className={s.paper}>\r\n                <DraftsTwoToneIcon fontSize='large'/>\r\n                <h3>{info}</h3>\r\n                <p>Check you email</p>\r\n            </Paper>\r\n    );\r\n};\r\n\r\nexport default CheckEmail;\r\n","import React, {useState} from 'react'\r\nimport {useFormik} from 'formik'\r\nimport {Button, FormGroup, FormLabel, Paper, TextField} from '@material-ui/core'\r\nimport s from './RestorePassword.module.css'\r\nimport CheckEmail from './CheckEmail'\r\nimport {useHistory} from 'react-router'\r\nimport {useAppSelector} from '../../../hooks/useAppSelector';\r\nimport {useActions} from '../../../hooks/useActions';\r\n\r\ntype FormikErrorType = {\r\n    email?: string;\r\n}\r\n\r\nconst RestorePasswordForm: React.FC = () => {\r\n    const info = useAppSelector(state => state.auth.info);\r\n    const status = useAppSelector(state => state.app.status);\r\n    const [isSent, setIsSent] = useState<boolean>(false);\r\n    const {restorePassword} = useActions();\r\n    const history = useHistory();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {}\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n            return errors\r\n        },\r\n        onSubmit: (values) => {\r\n            setIsSent(true);\r\n            restorePassword(values.email);\r\n        },\r\n    });\r\n\r\n    if (isSent) {\r\n        return <CheckEmail info={info}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <Paper className={s.paper} elevation={3}>\r\n                <form className={s.form} onSubmit={formik.handleSubmit}>\r\n                    <FormLabel>\r\n                        <h2 className={s.formLabel}>Forgot your password?</h2>\r\n                    </FormLabel>\r\n                    <FormGroup className={s.formGroup}>\r\n                        <TextField\r\n                            variant='standard'\r\n                            label='Email'\r\n                            margin='normal'\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.touched.email &&\r\n                        formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div> : null}\r\n                        <p className={s.text}>Enter your email address and we will send you further instructions</p>\r\n                        <Button\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={s.button}\r\n                            disabled={status === 'loading'}\r\n                        >\r\n                            Send my password</Button>\r\n                        <Button\r\n                            onClick={() => history.push('/login')}\r\n                            variant='contained'\r\n                            color='secondary'\r\n                            className={s.button}>\r\n                            Cancel</Button>\r\n                    </FormGroup>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    RestorePasswordForm\r\n}\r\n","import React from 'react';\r\nimport {RestorePasswordForm} from '../components/forms/restore-password/RestorePasswordForm';\r\n\r\nconst RestorePassword = () => {\r\n    return (\r\n        <RestorePasswordForm />\r\n    );\r\n};\r\n\r\nexport default RestorePassword;\r\n","import React from 'react';\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <div>\r\n            <h1 style={{ color: 'red', fontSize: 25 }}>Error occurred! You are trying to load a not existing page</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\nimport {useFormik} from 'formik';\r\nimport {Button, FormGroup, FormLabel, Paper, TextField} from '@material-ui/core';\r\nimport s from './SetPassword.module.css';\r\n\r\ntype FormikErrorType = {\r\n    password?: string;\r\n}\r\n\r\nconst SetPasswordForm: React.FC = () => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password: 'panich2303@gmail.com',\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {};\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Password is required!';\r\n            } else if (values.password.length < 8) {\r\n                errors.password = 'Must be more than 7 characters'\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: (values) => {\r\n            ;\r\n        },\r\n    });\r\n    return (\r\n        <Paper className={s.paper} elevation={3}>\r\n            <FormLabel>\r\n                <h3 style={{color: '#2D2E46'}}>Create New Password</h3>\r\n            </FormLabel>\r\n            <FormGroup className={s.formGroup}>\r\n                <TextField\r\n                    variant={'standard'}\r\n                    label='New password'\r\n                    type='password'\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n                {formik.touched.password &&\r\n                formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                <TextField\r\n                    variant={'standard'}\r\n                    label='Confirm password'\r\n                    type='password'\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n                {formik.touched.password &&\r\n                formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div> : null}\r\n                <p className={s.text}>Create new password and we will send you further instructions to email</p>\r\n                <div className={s.buttonBlock}>\r\n                    <Button\r\n                        onClick={() => {\r\n                        }}\r\n                        type={'submit'}\r\n                        variant={'contained'}\r\n                        color={'secondary'}\r\n                        className={s.button}>\r\n                        Cancel</Button>\r\n                    <Button\r\n                        type={'submit'}\r\n                        variant={'contained'}\r\n                        color={'primary'}\r\n                        className={s.button}\r\n                        onClick={() => {\r\n                        }}>\r\n                        Change password</Button>\r\n                </div>\r\n            </FormGroup>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport {\r\n    SetPasswordForm\r\n}\r\n","import React from 'react';\r\nimport {SetPasswordForm} from '../components/forms/set-password/SetPassword';\r\n\r\nconst SetPassword = () => {\r\n    return (\r\n        <div>\r\n            <SetPasswordForm/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SetPassword;\r\n","import React from 'react';\r\nimport {Avatar, Badge, Paper} from '@material-ui/core';\r\nimport AddAPhotoIcon from '@mui/icons-material/AddAPhoto';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <Paper>\r\n            <h3>Personal Information</h3>\r\n            <Badge\r\n                overlap=\"circular\"\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                badgeContent={4}\r\n            >\r\n                <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n            </Badge>\r\n\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React, {FC} from 'react';\r\nimport s from './AsideBar.module.css';\r\nimport {Button} from '@material-ui/core';\r\nimport {useAppSelector} from '../../../hooks/useAppSelector';\r\nimport {useActions} from '../../../hooks/useActions';\r\n\r\nconst IsMineBlock = () => {\r\n    console.log('IS MINE BLOCK')\r\n    const status = useAppSelector(state => state.app.status);\r\n    const isMine = useAppSelector(state => state.packs.isMine);\r\n    const {setIsMine} = useActions();\r\n\r\n    return (\r\n        <div className={s.isMineBlock}>\r\n            {\r\n                isMine\r\n                    ? <Button\r\n                        color='primary'\r\n                        variant='contained'\r\n                        disabled={status === 'loading'}\r\n                        onClick={() => setIsMine(false)}\r\n                    >All Packs</Button>\r\n                    : <Button\r\n                              variant='contained'\r\n                              disabled={status === 'loading'}\r\n                              onClick={() => setIsMine(true)}\r\n                    >My Packs</Button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IsMineBlock;\r\n","import React from 'react';\r\nimport s from './AsideBar.module.css';\r\nimport {Avatar, Badge, styled} from '@material-ui/core';\r\nimport {useAppSelector} from '../../../hooks/useAppSelector';\r\nimport {RouteNames} from '../../../router';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst UserInfoBlock = () => {\r\n    console.log('USER INFO BLOCK');\r\n    const user = useAppSelector(state => state.auth.user)\r\n    const SmallAvatar = styled(Avatar)(({ theme }) => ({\r\n        width: 22,\r\n        height: 22,\r\n        border: `2px solid ${theme.palette.background.paper}`,\r\n    }));\r\n    const BigAvatar = styled(Avatar)(({theme}) => ({\r\n        width: 150,\r\n        height: 150\r\n    }))\r\n\r\n    return (\r\n        <div className={s.userInfoBlock}>\r\n            <Badge\r\n                overlap=\"circular\"\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                badgeContent={\r\n                    <SmallAvatar alt=\"\" src={''}/>\r\n                }\r\n            >\r\n                <BigAvatar alt=\"profile avatar\" src={user.avatar}/>\r\n            </Badge>\r\n            <div>\r\n                <NavLink to={RouteNames.PROFILE}>{user.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserInfoBlock;\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './AsideBar.module.css';\r\nimport {Box, Button, Slider} from '@material-ui/core';\r\nimport {useActions} from '../../../hooks/useActions';\r\nimport {useAppSelector} from '../../../hooks/useAppSelector';\r\n\r\nconst SliderBlock = () => {\r\n    const [value, setValue] = React.useState<number[]>([1, 10]);\r\n    const {fetchPacks, setCardsQuantity} = useActions();\r\n    const user = useAppSelector(state => state.auth.user);\r\n    const status = useAppSelector(state => state.app.status);\r\n    const {isMine, maxCardsCount, minCardsCount, pageCount} = useAppSelector(state => state.packs);\r\n    const handleChange = (event: ChangeEvent<{}>, newValue: number | number[]) => {\r\n        setValue(newValue as number[]);\r\n        setCardsQuantity({min: value[0], max: value[1]});\r\n    }\r\n    const getPacks = () => {\r\n        if (isMine) {\r\n            fetchPacks({ min: minCardsCount, max: maxCardsCount, user_id: user._id, pageCount});\r\n        } else {\r\n            fetchPacks({min: minCardsCount, max: maxCardsCount, pageCount});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.sliderBlock}>\r\n            <h5>Number Of Cards</h5>\r\n            <Box sx={{width: 200}}>\r\n                <Slider\r\n                    getAriaLabel={() => 'Cards quantity range'}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    valueLabelDisplay='auto'\r\n                />\r\n                <Button variant='contained'\r\n                        onClick={getPacks}\r\n                        disabled={status === 'loading'}\r\n                >Set</Button>\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SliderBlock;\r\n","import React, {FC} from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport s from './AsideBar.module.css';\r\nimport IsMineBlock from './isMineBlock';\r\nimport UserInfoBlock from './UserInfoBlock';\r\nimport SliderBlock from './SliderBlock';\r\n\r\nexport const AsideBar: FC = () => {\r\n    console.log('ASIDE BAR')\r\n    return (\r\n        <Grid item xs={3} style={{backgroundColor: '#ECECF9'}}>\r\n            <div className={s.settings}>\r\n                <UserInfoBlock/>\r\n                <IsMineBlock/>\r\n                <SliderBlock/>\r\n            </div>\r\n        </Grid>\r\n    );\r\n};\r\n","import React, {ChangeEvent, DetailedHTMLProps, FC, SelectHTMLAttributes} from 'react';\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\r\n\r\ntype MySelectPropsType = DefaultSelectPropsType & {\r\n    options: Array<{ value: string, name: string }>;\r\n    onChange: (event: ChangeEvent<HTMLSelectElement>) => void;\r\n}\r\n\r\nconst MySelect: FC<MySelectPropsType> = ({options, defaultValue, value, onChange}, ...restProps) => {\r\n\r\n    return (\r\n        <select value={value}\r\n                onChange={onChange}\r\n        >\r\n            <option disabled value=''>{defaultValue}</option>\r\n            {\r\n                options.map(o => <option value={o.value} key={o.value}>\r\n                    {o.name}\r\n                </option>)\r\n            }\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default MySelect;\r\n","import React, {ChangeEvent} from 'react'\r\nimport {Pagination} from '@material-ui/lab'\r\nimport MySelect from '../common/select/MySelect'\r\nimport s from './PaginationBar.module.css'\r\nimport {RequestStatusType} from '../../store/reducers/app/types';\r\n\r\ntype PaginationBarPropsType = {\r\n    page?: number\r\n    pageCount: number\r\n    packsTotal: number\r\n    handlePageChange: (e: React.ChangeEvent<unknown>, value: number) => void\r\n    handlePageCountChange: (e: ChangeEvent<HTMLSelectElement>) => void\r\n    status: RequestStatusType\r\n}\r\n\r\nconst PaginationBar: React.FC<PaginationBarPropsType> = ({\r\n                                                             page,\r\n                                                             pageCount,\r\n                                                             packsTotal,\r\n                                                             handlePageChange,\r\n                                                             handlePageCountChange,\r\n                                                             status\r\n                                                         }) => {\r\n    const options = [\r\n        {value: '10', name: '10'},\r\n        {value: '15', name: '15'},\r\n        {value: '20', name: '20'},\r\n    ]\r\n    const totalPages = Math.ceil(packsTotal / pageCount)\r\n    return (\r\n        <div className={s.paginationBar}>\r\n            <Pagination count={totalPages}\r\n                        variant='outlined'\r\n                        color='primary'\r\n                        page={page}\r\n                        onChange={handlePageChange}\r\n                        disabled={status === 'loading'}\r\n            />\r\n            <MySelect options={options}\r\n                      defaultValue='Packs on page'\r\n                      onChange={handlePageCountChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaginationBar;\r\n","export const formatDate = (date: Date): string => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() < 10 ? `0${date.getMonth() + 1}`: date.getMonth() + 1;\r\n    const day = date.getDate() < 10 ? `0${date.getDate() + 1}`: date.getDate() + 1;\r\n    return `${day}.${month}.${year}`;\r\n};\r\n","import React, {useState} from 'react'\r\nimport {Button, TextField} from '@material-ui/core'\r\nimport s from './EditItemForm.module.css'\r\nimport {PackPayload} from '../../../store/reducers/packs/types';\r\n\r\ntype AddItemPropsType = {\r\n    onEditClick: (payload: PackPayload) => void\r\n    setVisible: (visible: boolean) => void\r\n    buttonTitle: string\r\n    pack_id: string\r\n    name: string\r\n}\r\n\r\nconst EditItemForm: React.FC<AddItemPropsType> = ({onEditClick, buttonTitle, setVisible, name, pack_id}) => {\r\n    const [title, setTitle] = useState<string>(() => name);\r\n    return (\r\n        <form className={s.form}>\r\n            <TextField onChange={e => setTitle(e.currentTarget.value)}\r\n                       value={title}\r\n                       label='New Title...'\r\n            />\r\n            <Button onClick={() => {\r\n                onEditClick({name: title, _id: pack_id})\r\n                setVisible(false)\r\n            }}\r\n                    color='primary'\r\n                    variant='contained'\r\n                    size='medium'\r\n                    className={s.button}\r\n                    disabled={title.length < 1}\r\n            >{buttonTitle}</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\n    export default EditItemForm;\r\n","import React, {FC} from 'react';\r\nimport s from './Modal.module.css'\r\ntype MyModalPropsType = {\r\n    visible: boolean;\r\n    setVisible: (visible: boolean) => void;\r\n}\r\n\r\nconst Modal: FC<MyModalPropsType> = ({children, visible, setVisible}) => {\r\n    const rootClasses = [s.myModal];\r\n    if (visible) {\r\n        rootClasses.push(s.active)\r\n    }\r\n\r\n    return (\r\n        <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n            <div className={s.myModalContent} onClick={event => {\r\n                event.stopPropagation()\r\n            }}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import {Button, Table, TableBody, TableCell, TableHead, TableRow} from '@material-ui/core'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './PacksTable.module.css'\r\nimport {useHistory} from 'react-router';\r\nimport {IPack} from '../../../models/IPack';\r\nimport {PackPayload} from '../../../store/reducers/packs/types';\r\nimport {FC, useState} from 'react';\r\nimport {formatDate} from '../../../utils/date';\r\nimport EditItemForm from '../../forms/edit-item-form/EditItemForm';\r\nimport {RouteNames} from '../../../router';\r\nimport Modal from '../../modals/Modal';\r\n\r\ntype PackTablePropsType = {\r\n    packs: IPack[];\r\n    userId?: string;\r\n    onDeleteClick: (id: string) => void;\r\n    onEditClick: (payload: PackPayload) => void;\r\n}\r\n\r\nexport const PacksTable: FC<PackTablePropsType> = ({\r\n                                                       packs,\r\n                                                       userId,\r\n                                                       onDeleteClick,\r\n                                                       onEditClick,\r\n                                                   }) => {\r\n    const columnTitles = [\r\n        {id: 1, title: 'Pack name'},\r\n        {id: 2, title: 'Cards'},\r\n        {id: 3, title: \"Last updated\"},\r\n        {id: 4, title: \"Created\"},\r\n        {id: 5, title: \"Actions\"}\r\n    ]\r\n    const [modal, setModal] = useState<boolean>(false);\r\n    const history = useHistory();\r\n    return (\r\n        <Table >\r\n            <TableHead className={s.tableHead}>\r\n                <TableRow>\r\n                    {columnTitles.map(t => {\r\n                        if (t.title === 'Pack name') {\r\n                            return <TableCell key={t.id}>{t.title}</TableCell>\r\n                        }\r\n                        return <TableCell key={t.id} align='center'>{t.title}</TableCell>\r\n                    })}\r\n                </TableRow>\r\n            </TableHead>\r\n            {!packs.length && <div className={s.noPacksMessage}>No packs has been found...</div>}\r\n            <TableBody>\r\n                {packs.map((pack) => (\r\n                    <TableRow key={pack._id}>\r\n                        <TableCell component='th' scope='row'>\r\n                            <NavLink to={RouteNames.PACKS + `/${pack._id}`}>{pack.name}</NavLink>\r\n                        </TableCell>\r\n                        <TableCell align='center'>{pack.cardsCount}</TableCell>\r\n                        <TableCell align='center'>{formatDate(new Date(pack.updated))}</TableCell>\r\n                        <TableCell align='center'>{formatDate(new Date(pack.created))}</TableCell>\r\n                        <TableCell align='center'>\r\n                            {\r\n                                userId === pack.user_id\r\n                                    ? <div>\r\n                                        <Button onClick={() => setModal(true)}>Edit</Button>\r\n                                        <Button onClick={()=> history.push('/learn/' + pack._id)}\r\n                                        >Learn</Button>\r\n                                        <Modal visible={modal} setVisible={setModal}>\r\n                                            <EditItemForm onEditClick={onEditClick}\r\n                                                          buttonTitle='Update pack'\r\n                                                          setVisible={setModal}\r\n                                                          pack_id={pack._id}\r\n                                                          name={pack.name}\r\n                                            />\r\n                                        </Modal>\r\n                                        <Button onClick={() => onDeleteClick(pack._id)}\r\n                                                color='secondary'\r\n                                        >Delete</Button>\r\n\r\n                                    </div>\r\n                                    : <Button onClick={() => history.push('/learn/' + pack._id)}>Learn</Button>\r\n                            }\r\n                        </TableCell>\r\n                    </TableRow>\r\n                ))}\r\n            </TableBody>\r\n        </Table>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Button, TextField} from '@material-ui/core'\r\nimport s from './AddNewItemForm.module.css'\r\n\r\ntype AddItemPropsType = {\r\n    onClick: (title: string) => void\r\n    setVisible: (visible: boolean) => void\r\n    buttonTitle: string\r\n}\r\n\r\nconst AddNewItemForm: React.FC<AddItemPropsType> = ({onClick, buttonTitle, setVisible}) => {\r\n    const [title, setTitle] = useState<string>('');\r\n    return (\r\n        <form className={s.form}>\r\n            <TextField onChange={event => setTitle(event.currentTarget.value)}\r\n                       placeholder='Title'\r\n                       value={title}\r\n            />\r\n            <Button onClick={() => {\r\n                onClick(title)\r\n                setVisible(false)\r\n                setTitle('')\r\n            }}\r\n                    color='primary'\r\n                    variant='contained'\r\n                    disabled={title.length < 1}\r\n            >{buttonTitle}</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\n    export default AddNewItemForm;\r\n","import React, {ChangeEvent, FC, useState} from 'react';\r\nimport s from '../Packs/PacksList/PacksList.module.css';\r\nimport {Button, TextField} from '@material-ui/core';\r\nimport Modal from '../modals/Modal';\r\nimport AddNewItemForm from '../forms/add-new-item-form/AddNewItemForm';\r\nimport {useAppSelector} from '../../hooks/useAppSelector';\r\nimport {Search} from '@material-ui/icons';\r\n\r\ntype SearchProps = {\r\n    filter: string;\r\n    onSearchClick: () => void;\r\n    handleSearch: (e: ChangeEvent<HTMLInputElement>) => void;\r\n    handleCreatePack: (title: string) => void;\r\n}\r\n\r\nexport const SearchBar: FC<SearchProps> = ({\r\n                                               filter,\r\n                                               onSearchClick,\r\n                                               handleSearch,\r\n                                               handleCreatePack\r\n                                           }) => {\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    const status = useAppSelector(state => state.app.status);\r\n    return (\r\n        <div className={s.searchBar}>\r\n            <div>\r\n                <TextField id='standard-search'\r\n                           label='Pack title...'\r\n                           type='search'\r\n                           size='small'\r\n                           value={filter}\r\n                           onChange={handleSearch}\r\n                />\r\n                <Button onClick={onSearchClick}\r\n                        color='primary'\r\n                ><Search/></Button>\r\n            </div>\r\n            <Button color='primary'\r\n                    onClick={() => setVisible(true)}\r\n                    disabled={status === 'loading'}\r\n            >Add Pack</Button>\r\n            <Modal visible={visible}\r\n                   setVisible={setVisible}\r\n            >\r\n                <AddNewItemForm buttonTitle='Create pack'\r\n                                onClick={handleCreatePack}\r\n                                setVisible={setVisible}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, {ChangeEvent, FC, useEffect, useState} from 'react'\r\nimport {Grid} from '@material-ui/core'\r\nimport s from './PacksList.module.css'\r\nimport {RequestStatusType} from '../../../store/reducers/app/types'\r\nimport PaginationBar from '../../Pagination/PaginationBar'\r\nimport {IPack} from '../../../models/IPack';\r\nimport {IUser} from '../../../models/IUser';\r\nimport {GetPacksQueryParams, PackPayload} from '../../../store/reducers/packs/types';\r\nimport {PacksTable} from './PacksTable';\r\nimport SearchBar from '../../Search/SearchBar';\r\nimport {useAppSelector} from '../../../hooks/useAppSelector';\r\nimport {useActions} from '../../../hooks/useActions';\r\n\r\nexport const PacksList: FC = () => {\r\n    const [newPackTitle, setNewPackTitle] = useState<string>('');\r\n    const [filter, setFilter] = useState<string>('');\r\n\r\n    const {packs, cardPacksTotalCount, page, pageCount, maxCardsCount, minCardsCount} =\r\n        useAppSelector(state => state.packs);\r\n    const queryParams = {page, pageCount, maxCardsCount, minCardsCount};\r\n    const status = useAppSelector(state => state.app.status);\r\n    const user = useAppSelector(state => state.auth.user);\r\n    const isMine = useAppSelector(state => state.packs.isMine);\r\n    const {fetchPacks, setPage, setPageCount, addPack, removePack, updatePack, setIsMine} = useActions();\r\n\r\n    const getPacks = (isMine: boolean, id?: string, filter?: string) => {\r\n        if (isMine && id) {\r\n            fetchPacks({...queryParams, user_id: id, packName: filter});\r\n        } else {\r\n            fetchPacks({...queryParams, packName: filter});\r\n        }\r\n    };\r\n    const handlePageChange = (e: React.ChangeEvent<unknown>, value: number) => setPage(value);\r\n    const handlePageCountChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        setPageCount(+e.currentTarget.value);\r\n    }\r\n    const handleSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFilter(e.currentTarget.value);\r\n    };\r\n    const handleOnSearchClick = () => getPacks(isMine, user._id, filter);\r\n    const handleCreatePack = async (title: string) => {\r\n        await addPack({name: title});\r\n        getPacks(isMine, user._id, filter);\r\n    };\r\n    const handleDeletePack = async (id: string) => {\r\n        await removePack(id);\r\n        getPacks(isMine, user._id, filter);\r\n    };\r\n    const handleEditPack = async (payload: PackPayload) => {\r\n        await updatePack({name: payload.name, _id: payload._id})\r\n        getPacks(isMine, user._id, filter);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPacks(isMine, user._id, filter);\r\n    }, [page, isMine, pageCount]);\r\n\r\n    return (\r\n        <Grid item xs={9} className={s.packList}>\r\n            <h3>Packs List ({cardPacksTotalCount})</h3>\r\n            <SearchBar\r\n                filter={filter}\r\n                onSearchClick={handleOnSearchClick}\r\n                handleSearch={handleSearch}\r\n                handleCreatePack={handleCreatePack}\r\n            />\r\n            <PacksTable packs={packs}\r\n                        userId={user?._id}\r\n                        onDeleteClick={handleDeletePack}\r\n                        onEditClick={handleEditPack}\r\n            />\r\n            {\r\n                packs.length > 0 && <PaginationBar page={queryParams.page}\r\n                                               pageCount={queryParams.pageCount}\r\n                                               packsTotal={cardPacksTotalCount}\r\n                                               handlePageChange={handlePageChange}\r\n                                               handlePageCountChange={handlePageCountChange}\r\n                                               status={status}\r\n                />\r\n            }\r\n        </Grid>\r\n    );\r\n};\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Grid, Paper} from '@material-ui/core';\r\nimport {AsideBar} from '../components/Packs/AsideBar/AsideBar';\r\nimport {PacksList} from '../components/Packs/PacksList/PacksList';\r\n\r\nconst Packs = () => {\r\n    console.log(\"PACKS\")\r\n    return (\r\n        <Grid container>\r\n            <Paper className='packs'>\r\n                <AsideBar />\r\n                <PacksList/>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Packs;\r\n","import React, {FC} from 'react';\r\nimport {Button, Table, TableBody, TableCell, TableHead, TableRow} from '@material-ui/core';\r\nimport s from '../Packs/PacksList/PacksList.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {RouteNames} from '../../router';\r\nimport {formatDate} from '../../utils/date';\r\nimport {ICard} from '../../models/ICard';\r\n\r\ntype CardTablePropsType = {\r\n    cards: ICard[]\r\n}\r\n\r\nconst CardTable: FC<CardTablePropsType> = ({cards}) => {\r\n\r\n    return (\r\n            <Table aria-label='card table'>\r\n                <TableHead className={s.tableHead}>\r\n                    <TableRow>\r\n                        <TableCell>Title</TableCell>\r\n                        <TableCell align='center'>Question</TableCell>\r\n                        <TableCell align='center'>Answer</TableCell>\r\n                        <TableCell align='center'>Last Updated</TableCell>\r\n                        <TableCell align='center'>Actions</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {cards.map((card) => (\r\n                        <TableRow key={card._id}>\r\n                            <TableCell component='th' scope='row'>\r\n                                <NavLink to={RouteNames.PACKS + `/${card._id}`}>{card.question}</NavLink>\r\n                            </TableCell>\r\n                            <TableCell align='center'>{card.answer}</TableCell>\r\n                            <TableCell align='center'>{formatDate (new Date(card.updated))}</TableCell>\r\n                            <TableCell align='center'>\r\n                                <div>\r\n                                    <Button onClick={() => {}}>Edit</Button>\r\n                                    <Button onClick={() => {}}\r\n                                            color='secondary'\r\n                                    >Delete</Button>\r\n                                </div>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n    );\r\n};\r\n\r\nexport default CardTable;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, Container, Paper, TextField} from '@material-ui/core';\r\nimport s from '../Packs/PacksList/PacksList.module.css'\r\nimport {Search} from '@material-ui/icons';\r\nimport Modal from '../modals/Modal';\r\nimport AddNewItemForm from '../forms/add-new-item-form/AddNewItemForm';\r\nimport {useAppSelector} from '../../hooks/useAppSelector';\r\nimport {useActions} from '../../hooks/useActions';\r\nimport {useParams} from 'react-router';\r\nimport CardTable from './CardTable';\r\n\r\nconst Cards = () => {\r\n    const [filter, setFilter] = useState<string>('');\r\n    const {cardsTotalCount, cards} = useAppSelector(state => state.cards);\r\n    const packs = useAppSelector(state => state.packs.packs);\r\n    const status = useAppSelector(state => state.app.status);\r\n    const isAuth = useAppSelector(state => state.auth);\r\n    const {fetchCards, addCard, authMe} = useActions();\r\n    const {id} = useParams<{ id: string }>();\r\n    let packName;\r\n    packs.forEach(p => {\r\n        if (p._id === id) {\r\n            packName = p.name\r\n        }\r\n    })\r\n\r\n    const onSearchClick = () => {\r\n        fetchCards({cardsPack_id: id});\r\n    };\r\n    const handleCreateCard = async (title: string) => {\r\n        await addCard({cardsPack_id: id});\r\n        fetchCards({cardsPack_id: id});\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            authMe();\r\n        }\r\n        fetchCards({cardsPack_id: id});\r\n    },[])\r\n\r\n    return (\r\n        <Container>\r\n            <Paper>\r\n                <h3>{`${packName} (${cardsTotalCount})`}</h3>\r\n                <div className={s.searchBar}>\r\n                    <TextField id='standard-search'\r\n                               label='SearchBar'\r\n                               type='search'\r\n                               variant='outlined'\r\n                               size='small'\r\n                               value={filter}\r\n                               onChange={e => setFilter(e.currentTarget.value)}\r\n                    />\r\n                    <Button onClick={onSearchClick}\r\n                            color='primary'\r\n                            variant={'outlined'}\r\n                            className={s.searchButton}\r\n                    ><Search/></Button>\r\n                    <Button variant='contained'\r\n                            color='primary'\r\n                            size='large'\r\n                            onClick={() => {\r\n                            }}\r\n                            disabled={status === 'loading'}\r\n                    >Add Pack</Button>\r\n                    <Modal visible={false}\r\n                           setVisible={() => {\r\n                           }}\r\n                    >\r\n                        <AddNewItemForm buttonTitle='Create card'\r\n                                        onClick={handleCreateCard}\r\n                                        setVisible={() => {\r\n                                        }}\r\n                        />\r\n                    </Modal>\r\n                </div>\r\n                <CardTable cards={cards}/>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React, {FC, useEffect, useState} from 'react';\r\nimport {Button, Card, CardActions, CardContent, CardMedia, Paper, Typography} from '@material-ui/core';\r\nimport {ICard} from '../models/ICard';\r\nimport {useAppSelector} from '../hooks/useAppSelector';\r\nimport {useHistory, useParams} from 'react-router';\r\nimport {useActions} from '../hooks/useActions';\r\nimport {RouteNames} from '../router';\r\nconst grades = ['Didn`t know', 'Forgot', 'Too much thinking', 'Confused', 'Got it'];\r\n\r\nconst getCard = (cards: ICard[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n    return cards[res.id + 1];\r\n};\r\n\r\nconst Learn: FC = () => {\r\n    const [card, setCard] = useState<ICard>({\r\n        _id: 'fake',\r\n        cardsPack_id: '',\r\n\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        grade: 0,\r\n        shots: 0,\r\n        answerImg: 'url or base 64',\r\n        questionImg: 'url or base 64',\r\n        questionVideo: 'url or base 64',\r\n        answerVideo: 'url or base 64',\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n\r\n        created: '',\r\n        updated: '',\r\n    });\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const {cards} = useAppSelector(state => state.cards);\r\n    const {id} = useParams<{ id: string }>();\r\n    const {fetchCards} = useActions();\r\n    const {packs} = useAppSelector(state => state.packs);\r\n    const pack = packs.find(p => p._id === id)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (first) {\r\n            fetchCards({cardsPack_id: id});\r\n            setFirst(false);\r\n        }\r\n\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n    }, [id, cards, first]);\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card style={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translateX(-50%) translateY(-50%)',\r\n            width: '450px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n        }}>\r\n            <div style={{display: 'flex'}}>\r\n                <Button onClick={() => history.push(RouteNames.PACKS)}\r\n                >Back</Button>\r\n                <h3>You are learning {pack?.name}</h3>\r\n            </div>\r\n            <CardContent>\r\n                {\r\n                    card.questionImg && <CardMedia\r\n                        component='img'\r\n                        height='194'\r\n                        image={card.questionImg}\r\n                        alt='Question image'\r\n                    />\r\n                }\r\n                <Typography variant='body2'>\r\n                    {card.question}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <div>\r\n                    <Button onClick={() => setIsChecked(true)}>check</Button>\r\n                </div>\r\n            </CardActions>\r\n            {isChecked && (\r\n                <>\r\n                    <Paper style={{margin: 10, padding:10}}>\r\n                        {\r\n                            card.answerImg && <CardMedia\r\n                                component='img'\r\n                                height='194'\r\n                                image={card.answerImg}\r\n                                alt='Answer image'\r\n                            />\r\n                        }\r\n                        {card.answer}\r\n                    </Paper>\r\n                    <div style={{\r\n                        marginTop: 10,\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center'\r\n                    }}>\r\n                        {grades.map((g, i) => (\r\n                            <div style={{margin: 5}}>\r\n                                <Button variant='outlined'\r\n                                        key={'grade-' + i}\r\n                                        onClick={() => {\r\n                                        }}>{g}</Button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div style={{margin: 20}}><Button\r\n                        color='primary'\r\n                        variant='contained'\r\n                        onClick={onNext}\r\n                    >next</Button></div>\r\n                </>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Learn;\r\n\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router';\r\nimport {privateRoutes, publicRoutes, RouteNames} from '../router';\r\nimport {useAppSelector} from '../hooks/useAppSelector';\r\n\r\nconst AppRouter = () => {\r\n    const {isAuth} = useAppSelector(state => state.auth)\r\n    return (\r\n        !isAuth ?\r\n            <Switch>\r\n                {publicRoutes.map(r =>\r\n                    <Route component={r.component}\r\n                           path={r.path}\r\n                           exact={r.exact}\r\n                           key={r.path}\r\n                    />\r\n                )}\r\n                <Redirect to={RouteNames.LOGIN}/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {privateRoutes.map(r =>\r\n                    <Route component={r.component}\r\n                           path={r.path}\r\n                           exact={r.exact}\r\n                           key={r.path}\r\n                    />\r\n                )}\r\n                <Redirect to={RouteNames.PACKS}/>\r\n            </Switch>\r\n    )\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport {Alert} from '@material-ui/lab';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Snackbar} from '@material-ui/core';\r\nimport {useAppSelector} from '../../../hooks/useAppSelector';\r\nimport {useActions} from '../../../hooks/useActions';\r\n\r\nconst ErrorBar = () => {\r\n    const dispatch = useDispatch();\r\n    const error = useAppSelector<string | null>(state => state.app.error);\r\n    const {setAppError} = useActions();\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppError(''));\r\n    }\r\n    const isOpen = error !== null;\r\n\r\n    return (\r\n        <Snackbar open={isOpen} autoHideDuration={4000} onClose={handleClose}>\r\n            <Alert variant='outlined' severity='error'>\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n    )\r\n}\r\n\r\nexport default ErrorBar\r\n","import {AppBar, Button, LinearProgress, Toolbar, Typography} from '@material-ui/core';\r\nimport React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {useAppSelector} from '../../hooks/useAppSelector';\r\nimport {useActions} from '../../hooks/useActions';\r\n\r\nconst Navbar = () => {\r\n    console.log('NAVBAR')\r\n    const isAuth = useAppSelector(state => state.auth.isAuth);\r\n    const status = useAppSelector(state => state.app.status);\r\n    const {logout} = useActions();\r\n    return (\r\n        <>\r\n            <AppBar position='static' className={s.appbar}>\r\n                <Toolbar className={s.toolbar}>\r\n                    <Typography variant='h6' className={s.text}>\r\n                        Learn whatever you need using spaced-repetition technique...\r\n                    </Typography>\r\n                    {\r\n                        isAuth &&\r\n                        <Button color='inherit'\r\n                                onClick={() => logout()}\r\n                                disabled={status === 'loading'}\r\n                        >Sign Out</Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            {status === 'loading' && <LinearProgress/>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, {useEffect} from 'react';\nimport AppRouter from './components/AppRouter';\nimport './styles/App.css';\nimport {CircularProgress, Container} from '@material-ui/core';\nimport ErrorBar from './components/common/error-bar/ErrorBar';\nimport Navbar from './components/Navbar/Navbar';\nimport {useAppSelector} from './hooks/useAppSelector';\nimport {useActions} from './hooks/useActions';\n\nconst App = () => {\n    console.log('APP')\n    const error = useAppSelector(state => state.app.error)\n    const isInitialized = useAppSelector(state => state.app.isInitialized)\n    const {initializeApp} = useActions();\n\n    useEffect(() => {\n        initializeApp();\n    }, []);\n\n    if (!isInitialized) {\n        return <div\n            style={{position: 'fixed', top: '40%', textAlign: 'center', width: '100%'}}>\n            <CircularProgress/>\n        </div>\n    }\n\n    return (\n        <div className='app'>\n            <Navbar/>\n            <Container className='container'>\n                <AppRouter/>\n                {error && <ErrorBar/>}\n            </Container>\n        </div>\n    );\n};\n\nexport default App\n","import {AuthAction, AuthActionEnum, AuthState} from './types';\r\nimport {IUser} from '../../../models/IUser';\r\n\r\nconst initialState: AuthState = {\r\n    user: {} as IUser,\r\n    isAuth: false,\r\n    info: '',\r\n};\r\n\r\nconst authReducer = (state = initialState, action: AuthAction): AuthState => {\r\n    switch (action.type) {\r\n        case AuthActionEnum.SET_USER_DATA:\r\n            return {...state, user: action.payload};\r\n        case AuthActionEnum.SET_IS_AUTH:\r\n            return {...state, isAuth: action.payload};\r\n        case AuthActionEnum.SET_INFO:\r\n            return {...state, info: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// const authMe = (): AppThunkType => async (dispatch) => {\r\n//     dispatch(setAppStatus('loading'))\r\n//     try {\r\n//         const data = await authAPI.authMe()\r\n//         dispatch(setUserData(data))\r\n//         dispatch(setIsAuth(true))\r\n//         dispatch(setAppStatus('succeed'))\r\n//         localStorage.setItem('auth', 'true')\r\n//         if (!data) {\r\n//             setAppError('No internet connection!')\r\n//         }\r\n//     } catch (e) {\r\n//         dispatch(setAppError(e.response.data.error))\r\n//         dispatch(setAppStatus('failed'))\r\n//     }\r\n// }\r\n// const register = (payload: RegisterPayloadType): AppThunkType => async (dispatch) => {\r\n//     dispatch(setAppStatus('loading'))\r\n//     try {\r\n//         const data = await authAPI.register(payload)\r\n//         dispatch(setIsRegistered(true))\r\n//         dispatch(setAppStatus('succeed'))\r\n//     } catch (e) {\r\n//         dispatch(setAppError(e.response.data.error))\r\n//         dispatch(setAppStatus('failed'))\r\n//     }\r\n// }\r\n// const restorePassword = (payload: { email: string }): AppThunkType => async (dispatch) => {\r\n//     dispatch(setAppStatus('loading'))\r\n//     try {\r\n//         const data = await authAPI.restorePassword(payload)\r\n//         dispatch(setAuthInfo(data.info))\r\n//         dispatch(setAppStatus('succeed'))\r\n//     } catch (e) {\r\n//         dispatch(setAppError(e.response.data.error))\r\n//         dispatch(setAppStatus('failed'))\r\n//     }\r\n// }\r\n\r\nexport default authReducer;\r\n","import {PacksAction, PacksActions, PacksState} from './types';\r\n\r\nconst initState: PacksState = {\r\n    packs: [],\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 0,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    filter: '',\r\n    isMine: false\r\n}\r\n\r\nconst packsReducer = (state = initState, action: PacksAction): PacksState => {\r\n    switch (action.type) {\r\n        case PacksActions.SET_PACKS:\r\n            return {...state, packs: action.payload};\r\n        case PacksActions.SET_PAGE_COUNT:\r\n            return {...state, pageCount: action.payload};\r\n        case PacksActions.SET_PAGE:\r\n            return {...state, page: action.payload};\r\n        case PacksActions.SET_PACKS_TOTAL_COUNT:\r\n            return {...state, cardPacksTotalCount: action.payload};\r\n        case PacksActions.SET_IS_MINE:\r\n            return {...state, isMine: action.payload};\r\n        case PacksActions.SET_CARDS_QUANTITY:\r\n            return {...state, maxCardsCount: action.payload.max, minCardsCount: action.payload.min};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default packsReducer;\r\n","    import {AppAction, AppActionEnum, AppState} from './types';\r\n\r\nconst initialState: AppState = {\r\n    isInitialized: false,\r\n    status: 'idle',\r\n    error: ''\r\n};\r\n\r\nconst appReducer = (state = initialState, action: AppAction): AppState => {\r\n    switch (action.type) {\r\n        case AppActionEnum.SET_APP_IS_INITIALIZED:\r\n            return {...state, isInitialized: action.payload};\r\n        case AppActionEnum.SET_APP_STATUS:\r\n            return {...state, status: action.payload};\r\n        case AppActionEnum.SET_APP_ERROR:\r\n            return {...state, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default appReducer;\r\n","import {CardsAction, CardsActions, CardsState} from './types';\r\n\r\nconst initState: CardsState = {\r\n    cards: [],\r\n    cardsTotalCount: 0,\r\n    maxGrade: 0,\r\n    minGrade: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    packUserId: ''\r\n}\r\n\r\nconst cardsReducer = (state = initState, action: CardsAction): CardsState => {\r\n    switch (action.type) {\r\n        case CardsActions.SET_CARDS:\r\n            return {...state, cards: action.payload};\r\n        case CardsActions.SET_CARDS_PAGE_COUNT:\r\n            return {...state, pageCount: action.payload};\r\n        case CardsActions.SET_CARDS_PAGE:\r\n            return {...state, page: action.payload};\r\n        case CardsActions.SET_CARDS_TOTAL_COUNT:\r\n            return {...state, cardsTotalCount: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cardsReducer;\r\n","import {combineReducers} from 'redux';\r\nimport authReducer from './auth';\r\nimport packsReducer from './packs';\r\nimport appReducer from './app';\r\nimport cardsReducer from './cards';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n});\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport {\r\n    rootReducer\r\n};\r\n","import {applyMiddleware, compose, createStore} from '@reduxjs/toolkit';\r\nimport {rootReducer} from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport {\r\n    store,\r\n};\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n","import {createTheme} from '@material-ui/core';\r\n\r\nexport const theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main:'#673ab7'\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: 'Comic Sans MS',\r\n    },\r\n    shape: {\r\n        borderRadius: 10\r\n    },\r\n    overrides: {\r\n        MuiContainer: {\r\n            root: {\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                margin: 20,\r\n                padding: 20,\r\n                overflowY: 'auto',\r\n                background: 'lightgrey'\r\n            }\r\n\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                textTransform: 'uppercase',\r\n                width: '130px',\r\n            }\r\n        },\r\n    },\r\n    props: {\r\n        MuiTextField: {\r\n            variant: 'standard',\r\n        },\r\n    }\r\n\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './store';\nimport {BrowserRouter} from 'react-router-dom';\nimport {MuiThemeProvider} from '@material-ui/core';\nimport {theme} from './styles/theme';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <MuiThemeProvider theme={theme}>\n                <App />\n            </MuiThemeProvider>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"RegisterForm_paper__3Wx1k\",\"form\":\"RegisterForm_form__1YA2d\",\"formGroup\":\"RegisterForm_formGroup__1eES6\",\"formLabel\":\"RegisterForm_formLabel__37OlO\",\"icon1\":\"RegisterForm_icon1__1wcWh\",\"icon2\":\"RegisterForm_icon2__66SOW\",\"buttonBlock\":\"RegisterForm_buttonBlock__64Uln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packList\":\"PacksList_packList__1rZQc\",\"searchBar\":\"PacksList_searchBar__3gFoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"LoginForm_paper__3qGfh\",\"form\":\"LoginForm_form__36SWb\",\"formGroup\":\"LoginForm_formGroup__24Z5-\",\"formLabel\":\"LoginForm_formLabel__2tMXa\",\"button\":\"LoginForm_button__10zpS\",\"signUpBlock\":\"LoginForm_signUpBlock__3FZ3k\",\"icon\":\"LoginForm_icon__2DjGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"AsideBar_settings__2SVbs\",\"sliderBlock\":\"AsideBar_sliderBlock__D-ln5\",\"userInfoBlock\":\"AsideBar_userInfoBlock__NiG6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"RestorePassword_paper__3g9s6\",\"form\":\"RestorePassword_form__3pASA\",\"formLabel\":\"RestorePassword_formLabel__1lduY\",\"formGroup\":\"RestorePassword_formGroup__wDP9u\",\"button\":\"RestorePassword_button__3b3Qc\",\"text\":\"RestorePassword_text__2qVmF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"SetPassword_paper__1u1ul\",\"formGroup\":\"SetPassword_formGroup__3sxZV\",\"buttonBlock\":\"SetPassword_buttonBlock__MuX-h\",\"text\":\"SetPassword_text__aFHGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"Modal_myModal__rClbI\",\"active\":\"Modal_active__2oSel\",\"myModalContent\":\"Modal_myModalContent__3gByB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appbar\":\"Navbar_appbar__301Oj\",\"toolbar\":\"Navbar_toolbar__2QZCs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHead\":\"PacksTable_tableHead__3DWvv\",\"noPacksMessage\":\"PacksTable_noPacksMessage__3Fo2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditItemForm_form__1NRfs\",\"button\":\"EditItemForm_button__2YKM0\"};"],"sourceRoot":""}